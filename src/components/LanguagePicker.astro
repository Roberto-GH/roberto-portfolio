---
import { getLangFromUrl, getLangFromUrlForToggle, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const switchLang = getLangFromUrlForToggle(Astro.url);
---

<language-picker>
	<a class:list={[`${lang}`]} href={`/${switchLang}/`}>
		<span class="sr-only">ES Language</span>
		<span class="icon english">EN</span>
		<span class="icon spanish">ES</span>
	</a>
</language-picker>

<style>
	a {
    text-decoration: none;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0;
		background-color: var(--gray-999);
		box-shadow: inset 0 0 0 1px var(--accent-overlay);
		cursor: pointer;
    margin-right: 20px;
	}

	.icon {
		z-index: 1;
		position: relative;
		display: flex;
		padding: 0.35rem;    
		width: 2.2rem;
    padding-left: 0.5rem;
		height: 2rem;
		font-size: 0.9rem;
		color: var(--accent-overlay);
	}

	.icon.english::before {
		content: '';
		z-index: -1;
		position: absolute;
		inset: 0;
		background-color: var(--accent-regular);
		border-radius: 999rem;
	}

  .es .icon.english::before {
		transform: translateX(100%);
	}	

	.es .icon.spanish,
	.en .icon.english,
	button[aria-pressed='false'] .icon.english {
		color: var(--accent-text-over);
	}

	@media (prefers-reduced-motion: no-preference) {
		.icon,
		.icon.english::before {
			transition: transform var(--theme-transition), color var(--theme-transition);
		}
	}

	@media (forced-colors: active) {
		.icon.english::before {
			background-color: SelectedItem;
		}
	}
</style>